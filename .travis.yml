language: generic

stages:
  - test
  - name: doc
    if: branch = master AND type != pull_request

env:
  global:
    - PYENV_VERSION=3.6
    - CHANNELS="-c pyviz/label/dev -c ioam -c bokeh -c conda-forge -c erdc -c defaults"

before_install:
  - echo -e "machine github.com\n  login $CI_USER\n  password $CI_USER_PASSWORD" >> ~/.netrc

cache:
  directories:
    - $HOME/miniconda

before_cache:
  - rm -rf $HOME/miniconda/pkgs
  - rm -rf $HOME/miniconda/conda-bld/*

jobs:
  include:

    ########## TEST DEVELOPER INSTALL ##########

    # quick tests in typical dev env (most tests are run on packages)

    - &default
      stage: test
      os: linux
      before_install:
        # install doit/pyct and use to install miniconda...
        - pip install pyct && doit miniconda_install && pip uninstall -y doit pyct
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        # ...and now install doit/pyct into miniconda
        - conda install -c pyviz/label/dev pyct && doit ecosystem_setup
      install:
        # tmp hack
        - conda env create && source activate earthsim
        - doit develop_install $CHANNELS
        - doit env_capture
      script:
        - doit test_flakes
#        - doit download_sample_data
#        - travis_wait 60 doit all_tests

# restore when travis/macos recovers...
#    - <<: *default
#      os: osx
#      before_install:
#        # brew-installed geos interferes with cartopy?
#        - brew uninstall --ignore-dependencies geos gdal postgis
#      if: branch = master AND type != pull_request

#    - <<: *default
#      stage: doc
#      script:
#        - doit install_doc_dependencies
#        - doit download_sample_data
#        - travis_wait 60 doit docs
#      deploy:
#        edge:
#          branch: v1.8.47
#        provider: pages
#        skip_cleanup: true
#        github_token: $GITHUB_TOKEN
#        local_dir: ./doc/_build/html
